// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillarysHairCare.Migrations
{
    [DbContext(typeof(HillarysHairCareDbContext))]
    partial class HillarysHairCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppointmentService", b =>
                {
                    b.Property<int>("AppointmentsId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicesId")
                        .HasColumnType("integer");

                    b.HasKey("AppointmentsId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("AppointmentService");

                    b.HasData(
                        new
                        {
                            AppointmentsId = 1,
                            ServicesId = 1
                        },
                        new
                        {
                            AppointmentsId = 1,
                            ServicesId = 6
                        },
                        new
                        {
                            AppointmentsId = 2,
                            ServicesId = 2
                        },
                        new
                        {
                            AppointmentsId = 2,
                            ServicesId = 5
                        },
                        new
                        {
                            AppointmentsId = 3,
                            ServicesId = 1
                        },
                        new
                        {
                            AppointmentsId = 4,
                            ServicesId = 4
                        },
                        new
                        {
                            AppointmentsId = 5,
                            ServicesId = 7
                        },
                        new
                        {
                            AppointmentsId = 6,
                            ServicesId = 3
                        },
                        new
                        {
                            AppointmentsId = 7,
                            ServicesId = 1
                        },
                        new
                        {
                            AppointmentsId = 7,
                            ServicesId = 4
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2023, 9, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2023, 9, 18, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            StylistId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2023, 9, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            StylistId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2023, 9, 19, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 4,
                            StylistId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2023, 9, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 5,
                            StylistId = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2023, 9, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 6,
                            StylistId = 6
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2023, 9, 21, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 7,
                            StylistId = 7
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "aaron@gmail.comx",
                            Name = "Customer Aaron",
                            PhoneNumber = "904-555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Email = "barbara@gmail.comx",
                            Name = "Customer Barbara",
                            PhoneNumber = "904-555-5432"
                        },
                        new
                        {
                            Id = 3,
                            Email = "chris@gmail.comx",
                            Name = "Customer Chris",
                            PhoneNumber = "904-555-0987"
                        },
                        new
                        {
                            Id = 4,
                            Email = "donald@gmail.comx",
                            Name = "Customer Donald",
                            PhoneNumber = "904-555-7890"
                        },
                        new
                        {
                            Id = 5,
                            Email = "evie@gmail.comx",
                            Name = "Customer Evie",
                            PhoneNumber = "904-555-0000"
                        },
                        new
                        {
                            Id = 6,
                            Email = "frannie@gmail.comx",
                            Name = "Customer Frannie",
                            PhoneNumber = "904-555-1212"
                        },
                        new
                        {
                            Id = 7,
                            Email = "gus@gmail.comx",
                            Name = "Customer Gus",
                            PhoneNumber = "904-555-3322"
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Women's Haircut",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Men's Haircut",
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Child's Haircut",
                            Price = 20.00m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Color",
                            Price = 75.00m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Beard Trim",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Perm",
                            Price = 65.00m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Blow-Out",
                            Price = 55.00m
                        });
                });

            modelBuilder.Entity("HillarysHairCare.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Stylist Abigail",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stylist Barry",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "Stylist Charlie",
                            isActive = false
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stylist Danielle",
                            isActive = true
                        },
                        new
                        {
                            Id = 5,
                            Name = "Stylist Ellie",
                            isActive = false
                        },
                        new
                        {
                            Id = 6,
                            Name = "Stylist Freddy",
                            isActive = true
                        },
                        new
                        {
                            Id = 7,
                            Name = "Stylist Georgia",
                            isActive = true
                        });
                });

            modelBuilder.Entity("AppointmentService", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Appointment", null)
                        .WithMany()
                        .HasForeignKey("AppointmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HillarysHairCare.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHairCare.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHairCare.Models.Stylist", "Stylist")
                        .WithMany()
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });
#pragma warning restore 612, 618
        }
    }
}
